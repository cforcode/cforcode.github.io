{"version":3,"sources":["img/login.svg","api-config.js","common/AppHeader.js","constants/index.js","user/login/SocialLogin.js","util/APIUtils.js","user/login/Login.js","user/login/Signup.js","user/login/Profile.js","user/login/OAuth2RedirectHandler.js","component/Home.js","component/common/Page404.js","component/Category.js","component/admin/AdminDashboard.js","component/admin/ListLanguages.js","component/admin/ListTopics.js","common/LoadingIndicator.js","common/PrivateRoute.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","APP_URL","Header","Layout","SubMenu","Menu","Text","Typography","AppHeader","theme","mode","defaultSelectedKeys","Item","key","to","this","props","authenticated","className","title","loggedInUser","imageUrl","src","icon","UserOutlined","level","name","onClick","onLogout","Component","window","location","hostname","process","REACT_APP_BACKEND_HOST","API_ROOT_URL","APP_ROOT_URL","OAUTH2_REDIRECT_URI","GOOGLE_AUTH_URL","FACEBOOK_AUTH_URL","GITHUB_AUTH_URL","SocialLogin","shape","style","GoogleSquareFilled","href","block","FacebookFilled","GithubFilled","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","Title","Login","state","email","password","onFinish","bind","error","setTimeout","message","history","replace","pathname","values","loginRequest","method","body","JSON","stringify","login","setItem","accessToken","success","loadCurrentlyLoggedInUser","catch","errorInfo","console","log","from","justify","xs","sm","md","LoginImage","width","alt","layout","initialValues","remember","label","rules","required","prefix","placeholder","Password","LockOutlined","valuePropName","noStyle","type","htmlType","Signup","SignupForm","handleInputChange","event","target","inputName","inputValue","value","setState","signupRequest","signUpRequest","push","Meta","Card","Profile","hoverable","cover","currentUser","description","OAuth2RedirectHandler","results","RegExp","exec","search","decodeURIComponent","token","getUrlParameter","Content","Home","cards","config","Authorization","axios","get","res","data","gutter","map","item","index","lg","textAlign","height","margin","itemLayout","dataSource","renderItem","avatar","React","Page404","status","subTitle","extra","Category","match","params","AdminDashboard","image","path","ListLanguages","languages","fontColorList","backgroundColorList","span","size","color","backgroundColor","code","nativeName","ListTopics","showModal","visible","handleOk","e","handleCancel","topics","onOk","onCancel","LoadingIndicator","display","marginTop","PrivateRoute","component","rest","render","App","loading","handleLogout","removeItem","basename","exact","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4f64863.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.216ae979.svg\";","let API_URL;\r\nlet APP_URL;\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nif(hostname === 'cforcode.github.io') {\r\n  API_URL = 'https://nerchuko.herokuapp.com';\r\n  APP_URL = 'https://cforcode.github.io';\r\n}  else {\r\n  API_URL = process.env.REACT_APP_BACKEND_HOST || 'http://localhost:8080';\r\n  APP_URL = 'http://localhost:3000';\r\n}\r\n\r\nexport const API_ROOT_URL = `${API_URL}`;\r\nexport const APP_ROOT_URL = `${APP_URL}`;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Avatar,Typography } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nconst { Header } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Text  } = Typography;\r\nclass AppHeader extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['0']}>\r\n                    <Menu.Item key=\"0\"><Link to=\"/\">Home</Link></Menu.Item>\r\n                    {!this.props.authenticated && <Menu.Item className=\"right\" key=\"3\"><Link to=\"/login\">Login</Link></Menu.Item>}\r\n                    {!this.props.authenticated && <Menu.Item className=\"right xs-hide\" key=\"4\"><Link to=\"/signup\">Signup</Link></Menu.Item>}\r\n                    {this.props.authenticated &&\r\n\r\n                        <SubMenu className=\"right\"\r\n                            title={\r\n                                <>\r\n                                    {this.props.loggedInUser.imageUrl && <Avatar src={this.props.loggedInUser.imageUrl} />}\r\n                                    {!this.props.loggedInUser.imageUrl && <Avatar icon={<UserOutlined />} />}\r\n                                    <Text level={4}>{this.props.loggedInUser.name}</Text>\r\n                                </>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"1\"><Link to=\"/admin\">Admin Dashboard</Link></Menu.Item>\r\n                            <Menu.Item key=\"2\"><Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                            <Menu.Item key=\"3\"><span onClick={this.props.onLogout}>Logout</span></Menu.Item>\r\n                        </SubMenu>\r\n                    }\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import { API_ROOT_URL, APP_ROOT_URL } from '../api-config';\r\nexport const ACCESS_TOKEN = 'accessToken';\r\n\r\nexport const OAUTH2_REDIRECT_URI = `${APP_ROOT_URL}/oauth2/redirect`\r\n\r\nexport const GOOGLE_AUTH_URL = `${API_ROOT_URL}/oauth2/authorize/google?redirect_uri=` + OAUTH2_REDIRECT_URI;\r\nexport const FACEBOOK_AUTH_URL = `${API_ROOT_URL}/oauth2/authorize/facebook?redirect_uri=` + OAUTH2_REDIRECT_URI;\r\nexport const GITHUB_AUTH_URL = `${API_ROOT_URL}/oauth2/authorize/github?redirect_uri=` + OAUTH2_REDIRECT_URI;\r\n","import React, { Component } from 'react';\r\nimport { GOOGLE_AUTH_URL, FACEBOOK_AUTH_URL, GITHUB_AUTH_URL } from '../../constants';\r\nimport { GoogleSquareFilled, FacebookFilled, GithubFilled } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nclass SocialLogin extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"social-login\">\r\n                 <Button shape=\"round\" style={{'background': '#dc4e41', 'color': '#fff'}} icon={<GoogleSquareFilled />} onClick={()=> window.location.href = GOOGLE_AUTH_URL} block>Google</Button>\r\n                 <Button shape=\"round\" style={{'background': '#3b5998', 'color': '#fff'}} icon={<FacebookFilled />} onClick={()=> window.location.href = FACEBOOK_AUTH_URL} block>Facebook</Button>\r\n                 <Button shape=\"round\" style={{'background': '#00405d', 'color': '#fff'}} icon={<GithubFilled />} onClick={()=> window.location.href = GITHUB_AUTH_URL} block>GitHub</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SocialLogin","import { ACCESS_TOKEN } from '../constants';\r\nimport { API_ROOT_URL } from '../api-config';\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\n\r\nexport function getCurrentUser() {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_ROOT_URL + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: API_ROOT_URL + \"/auth/login\",\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)\r\n    });\r\n}\r\n\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: API_ROOT_URL + \"/auth/signup\",\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport SocialLogin from './SocialLogin'\r\nimport { login } from '../../util/APIUtils';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LoginImage from '../../img/login.svg';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button, Checkbox, Typography, Row, Col, message, Divider } from 'antd';\r\nimport { ACCESS_TOKEN } from '../../constants';\r\nconst { Title } = Typography;\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n        this.onFinish = this.onFinish.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.state && this.props.location.state.error) {\r\n            setTimeout(() => {\r\n                message.error(this.props.location.state.error);\r\n                this.props.history.replace({\r\n                    pathname: this.props.location.pathname,\r\n                    state: {}\r\n                });\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    onFinish(values) {\r\n        const loginRequest = Object.assign({}, values);\r\n        login(loginRequest)\r\n            .then(response => {\r\n                localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n                message.success(\"You're successfully logged in!\");\r\n                this.props.loadCurrentlyLoggedInUser();\r\n            }).catch(error => {\r\n                message.error((error && error.message) || 'Oops! Something went wrong. Please try again!');\r\n            });\r\n    };\r\n\r\n    onFinishFailed(errorInfo) {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        if (this.props.authenticated) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: { from: this.props.location }\r\n                }} />;\r\n        }\r\n\r\n        return (\r\n            <Row justify=\"center\">\r\n                <Col xs={0} sm={0} md={12}><img src={LoginImage} width=\"100%\" alt=\"login\"></img></Col>\r\n                <Col xs={20} sm={20} md={8}>\r\n                    <div className=\"login-content\">\r\n                        <Title level={2}>Login</Title>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item label=\"Email Address\" name=\"email\" rules={[{ required: true, message: 'Please input your email!' }]}>\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"email\" />\r\n                            </Form.Item>\r\n                            <Form.Item label=\"password\" name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\r\n                                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                    <Checkbox>Remember me</Checkbox>\r\n                                </Form.Item>\r\n                                <span className=\"right\">\r\n                                    <Link className=\"login-form-forgot\" to=\"/forgot\">Forgot password</Link>\r\n                                </span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\r\n                            </Form.Item>\r\n                            <Divider>or</Divider>\r\n                            <SocialLogin />\r\n                        </Form>\r\n                        <div className=\"signup-link\">Don't have an account? <Link to=\"/signup\">Sign up</Link></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport SocialLogin from './SocialLogin'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { signup } from '../../util/APIUtils';\r\nimport { Form, Input, Button, Checkbox, Typography, Row, Col, message, Divider } from 'antd';\r\nimport LoginImage from '../../img/login.svg';\r\nconst { Title } = Typography;\r\n\r\nclass Signup extends Component {\r\n    render() {\r\n        if (this.props.authenticated) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: { from: this.props.location }\r\n                }} />;\r\n        }\r\n\r\n        return (\r\n            <Row justify=\"center\">\r\n                <Col xs={0} sm={14}><img src={LoginImage} width=\"100%\" alt=\"login\"></img></Col>\r\n                <Col xs={20} sm={6}>\r\n                    <div className=\"login-content\">\r\n                        <Title level={2}>Signup</Title>\r\n                        <SignupForm {...this.props} />\r\n                        <div className=\"signup-link\">Already have an account? <Link to=\"/login\">Login</Link></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nclass SignupForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        });\r\n    }\r\n\r\n    onFinish(values) {\r\n        const signUpRequest = Object.assign({}, values);\r\n\r\n        signup(signUpRequest)\r\n            .then(response => {\r\n                message.success(\"You're successfully registered. Please login to continue\");\r\n                this.props.history.push(\"/login\");\r\n            }).catch(error => {\r\n                message.error((error && error.message) || 'Oops Something went wrong. Please try again');\r\n            });\r\n    };\r\n\r\n    onFinishFailed(errorInfo) {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                layout=\"vertical\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please input your Name' }]}>\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"name\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email Address\" name=\"email\" rules={[{ required: true, message: 'Please input your Email Address' }]}>\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"email\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input your Password' }]}>\r\n                    <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Confirm Password\" name=\"confirmPassword\" rules={[{ required: true, message: 'Please input your confirm Password' }]}>\r\n                    <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n                    <span className=\"right\">\r\n                        <Link className=\"login-form-forgot\" to=\"/forgot\">Forgot password</Link>\r\n                    </span>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">Sign up</Button>\r\n                </Form.Item>\r\n                <Divider>or</Divider>\r\n                <SocialLogin />\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup","import React, { Component } from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <Card\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img src={this.props.currentUser.imageUrl} alt={this.props.currentUser.name} />}\r\n            >\r\n                <Meta title={this.props.currentUser.name} description={this.props.currentUser.email} />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react';\r\nimport { ACCESS_TOKEN } from '../../constants';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass OAuth2RedirectHandler extends Component {\r\n    getUrlParameter(name) {\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n\r\n        var results = regex.exec(this.props.location.search);\r\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    };\r\n\r\n    render() {        \r\n        const token = this.getUrlParameter('token');\r\n        const error = this.getUrlParameter('error');\r\n\r\n        if(token) {\r\n            localStorage.setItem(ACCESS_TOKEN, token);\r\n            return <Redirect to={{\r\n                pathname: \"/profile\",\r\n                state: { from: this.props.location }\r\n            }}/>; \r\n        } else {\r\n            return <Redirect to={{\r\n                pathname: \"/login\",\r\n                state: { \r\n                    from: this.props.location,\r\n                    error: error \r\n                }\r\n            }}/>; \r\n        }\r\n    }\r\n}\r\n\r\nexport default OAuth2RedirectHandler;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Card, Layout, Row, Col, List, Avatar } from 'antd';\r\nimport { API_ROOT_URL } from '../api-config';\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nexport default class Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cards: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n        };\r\n        axios.get(`${API_ROOT_URL}/topics`, config)\r\n            .then(res => {\r\n                const cards = res.data;\r\n                this.setState({ cards });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content>\r\n                <Row gutter={[24, 24]}>\r\n                    {this.state.cards.map((item, index) => (\r\n                        <Col key={index} className=\"gutter-row xs-hide\" sm={8} md={6} lg={4}>\r\n                            <Link to={`/topics/${item.name}`}>\r\n                                <Card\r\n                                    hoverable\r\n                                    style={{ textAlign: \"center\" }}\r\n                                    cover={<img alt={item.name} src={item.imageUrl} style={{ height: \"100px\", width: \"auto\", margin: \"24px auto 0\" }} />}\r\n                                >\r\n                                    <Meta title={item.name} style={{ textAlign: \"center\" }} />\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <List className=\"sm-hide md-hide lg-hide\"\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.cards}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <Link to={`/topics/${item.name}`} style={{'width': '100%'}}>\r\n                                <List.Item.Meta className=\"ml2\"\r\n                                    avatar={<Avatar src={item.imageUrl} />}\r\n                                    title={item.name}\r\n                                    description={item.name}\r\n                                />\r\n                            </Link>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Content>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\n\r\nexport default class Page404 extends React.Component {\r\n    render() {\r\n        return (\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={<Link to=\"/\" className=\"ant-btn ant-btn-primary\">Home</Link>}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default class Category extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Category: {this.props.match.params.name}</h1>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Layout } from 'antd';\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nexport default class AdminDashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cards: [\r\n                { name: \"Languages\", image: \"https://image.flaticon.com/icons/svg/484/484531.svg\", path: \"languages\" },\r\n                { name: \"Topics\", image: \"https://image.flaticon.com/icons/svg/2422/2422223.svg\", path: \"topics\" },\r\n            ],\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Content>\r\n                <Row gutter={[24, 24]}>\r\n                    {this.state.cards.map((item, index) => (\r\n                        <Col key={index} className=\"gutter-row\" xs={12} sm={8} md={4}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ textAlign: \"center\" }}\r\n                                cover={<Link to={`/admin/${item.path}`}><img alt={item.name} src={item.image} style={{ height: \"100px\", width: \"auto\", margin: \"24px auto 0\" }} /></Link>}\r\n                            >\r\n                                <Meta title={<Link to={`/admin/${item.path}`}>{item.name}</Link>} style={{ textAlign: \"center\" }} />\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Content>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Row, Col, Card, List, Avatar, Breadcrumb } from 'antd';\r\n\r\nexport default class ListLanguages extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            languages: [],\r\n            fontColorList: ['#613400', '#254000', '#092b00', '#002766'],\r\n            backgroundColorList: ['#fffbe6', '#f4ffb8', '#d9f7be', '#bae7ff']\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n        };\r\n        axios.get(`http://localhost:8080/languages`, config)\r\n            .then(res => {\r\n                const languages = res.data;\r\n                this.setState({ languages });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                \r\n                <Row justify=\"center\">\r\n                    <Col span={20}>\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                            <Link to={`/admin`}>Admin</Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Languages</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                    <Col span={20}>\r\n                    <Card size=\"small\" title=\"Languages\" \r\n                    extra={<a href=\"add\">Add</a>} >\r\n\r\n                        <List\r\n                            size=\"small\"\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={this.state.languages}\r\n                            renderItem={(item, index) => (\r\n                                <List.Item>\r\n                                    <List.Item.Meta\r\n                                        avatar={<Avatar style={{ color: this.state.fontColorList[index], backgroundColor: this.state.backgroundColorList[index] }}>{item.code}</Avatar>}\r\n                                        title={<a href=\"https://ant.design\">{item.name}</a>}\r\n                                        description={item.nativeName}\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Row, Col, Card, List, Avatar, Breadcrumb, Modal, Button, Form, Input } from 'antd';\r\nexport default class ListTopics extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            topics: [],\r\n            visible: false,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n        };\r\n        axios.get(`http://localhost:8080/topics`, config)\r\n            .then(res => {\r\n                const topics = res.data;\r\n                this.setState({ topics });\r\n            })\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n\r\n    render() {\r\n        const { topics } = this.state;\r\n        // const [form] = Form.useForm();\r\n        return (\r\n            <>\r\n            <Row justify=\"center\">\r\n                    <Col span={20}>\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                            <Link to={`/admin`}>Admin</Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Topics</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                    <Col span={20}>\r\n                    <Card size=\"small\" title=\"Topics List\" \r\n                    extra={<Button type=\"primary\" size=\"small\" onClick={this.showModal}>Add</Button>} >\r\n                    <List\r\n                            size=\"small\"\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={topics}\r\n                            renderItem={(item, index) => (\r\n                                <List.Item>\r\n                                    <List.Item.Meta\r\n                                        avatar={<Avatar shape=\"square\" src= {item.imageUrl}/>}\r\n                                        title={item.name}\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />    </Card>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n    <div>\r\n      <Form\r\n        layout=\"vertical\"\r\n        // form={form}\r\n        // onValuesChange={onFormLayoutChange}\r\n      >\r\n        <Form.Item label=\"Field A\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"Field B\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\">Submit</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n        </Modal>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function LoadingIndicator(props) {\r\n    return (\r\n        <div className=\"loading-indicator\" style={{display: 'block', textAlign: 'center', marginTop: '30px'}}>\r\n            Loading ...\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\n  \r\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated ? (\r\n          <Component {...rest} {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n);\r\n  \r\nexport default PrivateRoute","import React, { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport AppHeader from '../common/AppHeader';\r\nimport Login from '../user/login/Login';\r\nimport Signup from '../user/login/Signup';\r\nimport Profile from '../user/login/Profile';\r\nimport OAuth2RedirectHandler from '../user/login/OAuth2RedirectHandler';\r\nimport Home from '../component/Home';\r\nimport Page404 from '../component/common/Page404';\r\nimport Category from '../component/Category';\r\nimport AdminDashboard from '../component/admin/AdminDashboard';\r\nimport ListLanguages from '../component/admin/ListLanguages';\r\nimport ListTopics from '../component/admin/ListTopics';\r\nimport LoadingIndicator from '../common/LoadingIndicator';\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport { ACCESS_TOKEN } from '../constants';\r\nimport PrivateRoute from '../common/PrivateRoute';\r\nimport { Layout, message } from 'antd';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authenticated: false,\r\n      currentUser: null,\r\n      loading: false\r\n    }\r\n\r\n    this.loadCurrentlyLoggedInUser = this.loadCurrentlyLoggedInUser.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  loadCurrentlyLoggedInUser() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    getCurrentUser()\r\n      .then(response => {\r\n        this.setState({\r\n          currentUser: response,\r\n          authenticated: true,\r\n          loading: false\r\n        });\r\n      }).catch(error => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleLogout() {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n    this.setState({\r\n      authenticated: false,\r\n      currentUser: null\r\n    });\r\n    message.success('You have been successfully logged out');\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentlyLoggedInUser();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingIndicator />\r\n    }\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Layout className=\"layout\">\r\n          <AppHeader authenticated={this.state.authenticated} loggedInUser={this.state.currentUser} onLogout={this.handleLogout} />\r\n          <>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}></Route>\r\n              <PrivateRoute path=\"/profile\" authenticated={this.state.authenticated} currentUser={this.state.currentUser}\r\n                component={Profile}></PrivateRoute>\r\n              <Route path=\"/login\" render={(props) => <Login authenticated={this.state.authenticated} {...props} loadCurrentlyLoggedInUser={this.loadCurrentlyLoggedInUser} />}></Route>\r\n              <Route path=\"/signup\" render={(props) => <Signup authenticated={this.state.authenticated} {...props} />}></Route>\r\n              <Route path=\"/oauth2/redirect\" component={OAuth2RedirectHandler}></Route>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/admin/languages\" component={ListLanguages} />\r\n              <Route path=\"/admin/topics\" component={ListTopics} />\r\n              <Route path=\"/admin\" component={AdminDashboard} />\r\n              <Route path=\"/topics/:name\" component={Category} />\r\n              <Route path=\"*\" component={Page404}></Route>\r\n            </Switch>\r\n          </>\r\n        </Layout>\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}